# Generated by Django 5.2.6 on 2025-09-13 14:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('games', '0005_scoreevent_batting_side'),
    ]

    operations = [
        migrations.AddField(
            model_name='basketball',
            name='actual_start_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='basketball',
            name='current_quarter',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='basketball',
            name='end_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='basketball',
            name='overtime_periods',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='basketball',
            name='overtime_time_added_seconds',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='basketball',
            name='possession_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basketball_possessions', to='games.team'),
        ),
        migrations.AddField(
            model_name='basketball',
            name='team1_fouls_current_quarter',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='basketball',
            name='team2_fouls_current_quarter',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='basketball',
            name='time_remaining_seconds',
            field=models.PositiveIntegerField(default=720),
        ),
        migrations.AddField(
            model_name='basketball',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basketball_wins', to='games.team'),
        ),
        migrations.CreateModel(
            name='BasketballFoul',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foul_type', models.CharField(choices=[('PERSONAL', 'Personal Foul'), ('TECHNICAL', 'Technical Foul'), ('FLAGRANT_1', 'Flagrant Foul 1'), ('FLAGRANT_2', 'Flagrant Foul 2'), ('OFFENSIVE', 'Offensive Foul'), ('DEFENSIVE', 'Defensive Foul')], max_length=12)),
                ('shots_awarded', models.CharField(choices=[('NONE', 'No Shots'), ('2_SHOTS', '2 Free Throws'), ('3_SHOTS', '3 Free Throws'), ('1_AND_1', 'One and One')], default='NONE', max_length=7)),
                ('points_scored_from_foul', models.PositiveIntegerField(default=0)),
                ('quarter', models.PositiveIntegerField()),
                ('time_remaining_seconds', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fouled_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basketball_fouls_received', to='games.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fouls', to='games.basketball')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_fouls', to='games.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_fouls', to='games.team')),
            ],
            options={
                'indexes': [models.Index(fields=['game', 'created_at'], name='games_baske_game_id_309be7_idx'), models.Index(fields=['player', 'created_at'], name='games_baske_player__e75c33_idx')],
            },
        ),
        migrations.CreateModel(
            name='BasketballShot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shot_type', models.CharField(choices=[('2PT', '2-Pointer'), ('3PT', '3-Pointer'), ('FT', 'Free Throw')], max_length=3)),
                ('result', models.CharField(choices=[('MADE', 'Made'), ('MISSED', 'Missed'), ('BLOCKED', 'Blocked')], max_length=7)),
                ('points_scored', models.PositiveIntegerField(default=0)),
                ('quarter', models.PositiveIntegerField()),
                ('time_remaining_seconds', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assist_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basketball_assists', to='games.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shots', to='games.basketball')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_shots', to='games.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_shots', to='games.team')),
            ],
            options={
                'indexes': [models.Index(fields=['game', 'created_at'], name='games_baske_game_id_09909d_idx'), models.Index(fields=['player', 'created_at'], name='games_baske_player__feaa1b_idx')],
            },
        ),
        migrations.CreateModel(
            name='BasketballSubstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.PositiveIntegerField()),
                ('time_remaining_seconds', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions', to='games.basketball')),
                ('player_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_subs_in', to='games.player')),
                ('player_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_subs_out', to='games.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_substitutions', to='games.team')),
            ],
            options={
                'indexes': [models.Index(fields=['game', 'created_at'], name='games_baske_game_id_eac6b2_idx'), models.Index(fields=['team', 'created_at'], name='games_baske_team_id_6fa25a_idx')],
            },
        ),
        migrations.CreateModel(
            name='BasketballTimeout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeout_type', models.CharField(choices=[('FULL', 'Full Timeout'), ('20_SECOND', '20 Second Timeout'), ('OFFICIAL', 'Official Timeout')], max_length=10)),
                ('quarter', models.PositiveIntegerField()),
                ('time_remaining_seconds', models.PositiveIntegerField()),
                ('duration_seconds', models.PositiveIntegerField(default=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeouts', to='games.basketball')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basketball_timeouts', to='games.team')),
            ],
            options={
                'indexes': [models.Index(fields=['game', 'created_at'], name='games_baske_game_id_d3dc6e_idx')],
            },
        ),
        migrations.CreateModel(
            name='BasketballViolation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_type', models.CharField(choices=[('TRAVELING', 'Traveling'), ('DOUBLE_DRIBBLE', 'Double Dribble'), ('SHOT_CLOCK', 'Shot Clock Violation'), ('BACKCOURT', 'Backcourt Violation'), ('THREE_SECONDS', '3 Seconds in the Lane'), ('FIVE_SECONDS', '5 Second Violation'), ('EIGHT_SECONDS', '8 Second Violation'), ('GOALTENDING', 'Goaltending'), ('BASKET_INTERFERENCE', 'Basket Interference'), ('OUT_OF_BOUNDS', 'Out of Bounds')], max_length=20)),
                ('quarter', models.PositiveIntegerField()),
                ('time_remaining_seconds', models.PositiveIntegerField()),
                ('points_awarded_to_opponent', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='games.basketball')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basketball_violations', to='games.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basketball_violations', to='games.team')),
            ],
            options={
                'indexes': [models.Index(fields=['game', 'created_at'], name='games_baske_game_id_ece2f6_idx'), models.Index(fields=['team', 'created_at'], name='games_baske_team_id_3c834c_idx')],
            },
        ),
    ]
